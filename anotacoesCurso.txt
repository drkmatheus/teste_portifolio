Os comandos de git que foram falados nas aulas:

1- Após criar a pasta do projeto no seu PC usar o comando:
git init no terminal do vscode.
2- Usar o comando git status quando precisar verificar o status dos arquivos.
3- Toda vez que criar um repositorio no github, vir no vscode e digitar os seguintes comandos:
3.1- usar git add . -> envia todos os arquivos da pasta do projeto para serem enviados para o github.
3.2- usar git commit -m "mensagem" -> escreva uma mensagem para versionamento dos arquivos anteriormente adicionados para a primeira commit.
4- git branch -M main -> para qual branch vai ser enviado os arquivos.
5- git remote add origin https://..... -> o github vai te dar um url para sincronizar o envio dos arquivos para o servidor do github na branch que voce escolheu.
6- git push -u origin main -> vai "empurrar" tudo que voce selecionou para o branch e sincronizar todas as alteracoes.
---------------------------------------------------
Sempre usar o "git status" para verificar se há alguma divergência entre os arquivos do projeto que estao no seu PC e os que se encontram no repostitorio do github.
Caso voce crie alguma outro arquivo dentro do projeto ou modifique algum arquivo, use o "git add .", "git commit -a -m "mensagem"" e "git push".
git pull pode ser usado para ver se houve alguma alteracao no repositorio.
Para clonar um repositorio fazermos: "git clone https://...... .". Usamos quando entramos pela primeira vez num projeto já existente ou houve alguma mudanca nos arquivos do projeto.
Para remover arquivos usamos: git rm (nome do arquivo). Depois devemos dar commit nessa deleçao. Depois devemos dar git push.
git log dá um historico do alteracoes.
Mover arquivos de lugar com: git mv (nome do arquivo) (novo local/nomeArquivo) depois damos commit e depois push. Para renomear é so nao especificar uma pasta nova, mas sim o nomeoriginal e novo nome.
Para desfazer alteracoes: git checkout. Esse cancela alguma mudanca que voce tenha feito substituindo-o pelo o arquivo que ta na main.
Caso voce precise usar dados sensiveis, usar o .gitignore. Voce cria um arquivo dentro da pasta do projeto com o nome .gitignore e dentro desse arquivo escreve o nome completo do arquivo que deseja ignorar, ou seja, nao o envia para o github por motivos de seguranca.
Para resetar um branch usamos git reset --hard origin/main. Retorna pro estado do branch do ultimo commit feito.
----------------------------------------------------
Branch é uma ramificacao da main exclusiva para voce trabalhar no desenvolvimento de uma feature nova e tratar erros e bugs caso acontençam.
